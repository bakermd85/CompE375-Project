
328P-Project-8x8LEDMatrix.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00000276  0000030a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000276  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  008001a0  008001a0  000003aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000292  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000011d  00000000  00000000  00000706  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f5  00000000  00000000  00000823  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  00000d18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00006ef9  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002b0  00000000  00000000  00007ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00007f95  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00000228  00000000  00000000  00007ff5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	49 c0       	rjmp	.+146    	; 0xa0 <__vector_3>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5b c0       	rjmp	.+182    	; 0xe4 <__vector_11>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__vector_14>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e7       	ldi	r30, 0x76	; 118
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 3a       	cpi	r26, 0xA0	; 160
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 ea       	ldi	r26, 0xA0	; 160
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 3a       	cpi	r26, 0xA3	; 163
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	b2 d0       	rcall	.+356    	; 0x200 <main>
  9c:	ea c0       	rjmp	.+468    	; 0x272 <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <__vector_3>:
			}
			
			x = 0;			
		}
	}
}
  a0:	1f 92       	push	r1
  a2:	0f 92       	push	r0
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	0f 92       	push	r0
  a8:	11 24       	eor	r1, r1
  aa:	8f 93       	push	r24
  ac:	1f 99       	sbic	0x03, 7	; 3
  ae:	05 c0       	rjmp	.+10     	; 0xba <__vector_3+0x1a>
  b0:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <pb7Flag>
  b4:	8f 5f       	subi	r24, 0xFF	; 255
  b6:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <pb7Flag>
  ba:	8f 91       	pop	r24
  bc:	0f 90       	pop	r0
  be:	0f be       	out	0x3f, r0	; 63
  c0:	0f 90       	pop	r0
  c2:	1f 90       	pop	r1
  c4:	18 95       	reti

000000c6 <__vector_14>:
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	8f 93       	push	r24
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <msDelay>
  d8:	8f 91       	pop	r24
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	0f 90       	pop	r0
  e0:	1f 90       	pop	r1
  e2:	18 95       	reti

000000e4 <__vector_11>:
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	0f 90       	pop	r0
  f0:	0f be       	out	0x3f, r0	; 63
  f2:	0f 90       	pop	r0
  f4:	1f 90       	pop	r1
  f6:	18 95       	reti

000000f8 <display_numerals>:
  f8:	cf 93       	push	r28
  fa:	15 b8       	out	0x05, r1	; 5
  fc:	18 b8       	out	0x08, r1	; 8
  fe:	62 e3       	ldi	r22, 0x32	; 50
 100:	70 e0       	ldi	r23, 0x00	; 0
 102:	c0 e0       	ldi	r28, 0x00	; 0
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	41 e0       	ldi	r20, 0x01	; 1
 108:	50 e0       	ldi	r21, 0x00	; 0
 10a:	a0 e8       	ldi	r26, 0x80	; 128
 10c:	4b c0       	rjmp	.+150    	; 0x1a4 <display_numerals+0xac>
 10e:	84 30       	cpi	r24, 0x04	; 4
 110:	91 05       	cpc	r25, r1
 112:	d4 f4       	brge	.+52     	; 0x148 <display_numerals+0x50>
 114:	9a 01       	movw	r18, r20
 116:	08 2e       	mov	r0, r24
 118:	02 c0       	rjmp	.+4      	; 0x11e <display_numerals+0x26>
 11a:	22 0f       	add	r18, r18
 11c:	33 1f       	adc	r19, r19
 11e:	0a 94       	dec	r0
 120:	e2 f7       	brpl	.-8      	; 0x11a <display_numerals+0x22>
 122:	20 68       	ori	r18, 0x80	; 128
 124:	25 b9       	out	0x05, r18	; 5
 126:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__data_end>
 12a:	fc 01       	movw	r30, r24
 12c:	38 e0       	ldi	r19, 0x08	; 8
 12e:	23 9f       	mul	r18, r19
 130:	e0 0d       	add	r30, r0
 132:	f1 1d       	adc	r31, r1
 134:	11 24       	eor	r1, r1
 136:	ee 0f       	add	r30, r30
 138:	ff 1f       	adc	r31, r31
 13a:	e0 50       	subi	r30, 0x00	; 0
 13c:	ff 4f       	sbci	r31, 0xFF	; 255
 13e:	20 81       	ld	r18, Z
 140:	20 95       	com	r18
 142:	2b b9       	out	0x0b, r18	; 11
 144:	18 b8       	out	0x08, r1	; 8
 146:	1a c0       	rjmp	.+52     	; 0x17c <display_numerals+0x84>
 148:	9c 01       	movw	r18, r24
 14a:	24 50       	subi	r18, 0x04	; 4
 14c:	31 09       	sbc	r19, r1
 14e:	fa 01       	movw	r30, r20
 150:	02 c0       	rjmp	.+4      	; 0x156 <display_numerals+0x5e>
 152:	ee 0f       	add	r30, r30
 154:	ff 1f       	adc	r31, r31
 156:	2a 95       	dec	r18
 158:	e2 f7       	brpl	.-8      	; 0x152 <display_numerals+0x5a>
 15a:	e8 b9       	out	0x08, r30	; 8
 15c:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__data_end>
 160:	fc 01       	movw	r30, r24
 162:	38 e0       	ldi	r19, 0x08	; 8
 164:	23 9f       	mul	r18, r19
 166:	e0 0d       	add	r30, r0
 168:	f1 1d       	adc	r31, r1
 16a:	11 24       	eor	r1, r1
 16c:	ee 0f       	add	r30, r30
 16e:	ff 1f       	adc	r31, r31
 170:	e0 50       	subi	r30, 0x00	; 0
 172:	ff 4f       	sbci	r31, 0xFF	; 255
 174:	20 81       	ld	r18, Z
 176:	20 95       	com	r18
 178:	2b b9       	out	0x0b, r18	; 11
 17a:	a5 b9       	out	0x05, r26	; 5
 17c:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <msDelay>
 180:	21 30       	cpi	r18, 0x01	; 1
 182:	21 f0       	breq	.+8      	; 0x18c <display_numerals+0x94>
 184:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <msDelay>
 188:	21 30       	cpi	r18, 0x01	; 1
 18a:	e1 f7       	brne	.-8      	; 0x184 <display_numerals+0x8c>
 18c:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <msDelay>
 190:	a5 b9       	out	0x05, r26	; 5
 192:	18 b8       	out	0x08, r1	; 8
 194:	01 96       	adiw	r24, 0x01	; 1
 196:	88 30       	cpi	r24, 0x08	; 8
 198:	91 05       	cpc	r25, r1
 19a:	09 f0       	breq	.+2      	; 0x19e <display_numerals+0xa6>
 19c:	b8 cf       	rjmp	.-144    	; 0x10e <display_numerals+0x16>
 19e:	61 50       	subi	r22, 0x01	; 1
 1a0:	71 09       	sbc	r23, r1
 1a2:	19 f0       	breq	.+6      	; 0x1aa <display_numerals+0xb2>
 1a4:	8c 2f       	mov	r24, r28
 1a6:	9b 2f       	mov	r25, r27
 1a8:	b2 cf       	rjmp	.-156    	; 0x10e <display_numerals+0x16>
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <generateTimer>:

void generateTimer(void)
{ 
	TCCR1A |= (1<<WGM12); //Set to CTC Mode
 1ae:	e0 e8       	ldi	r30, 0x80	; 128
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	80 81       	ld	r24, Z
 1b4:	88 60       	ori	r24, 0x08	; 8
 1b6:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS12) | (1<<CS10);
 1b8:	e1 e8       	ldi	r30, 0x81	; 129
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	85 60       	ori	r24, 0x05	; 5
 1c0:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A);
 1c2:	ef e6       	ldi	r30, 0x6F	; 111
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	82 60       	ori	r24, 0x02	; 2
 1ca:	80 83       	st	Z, r24
	OCR1A = 23437;
 1cc:	8d e8       	ldi	r24, 0x8D	; 141
 1ce:	9b e5       	ldi	r25, 0x5B	; 91
 1d0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1d4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1d8:	08 95       	ret

000001da <generateTimer0>:
}

void generateTimer0(void)
{ 
	ADCSRB |= (1<<ADTS0) | (1<<ADTS1); //Set Timer/Counter 0 Compare Match A
 1da:	eb e7       	ldi	r30, 0x7B	; 123
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	83 60       	ori	r24, 0x03	; 3
 1e2:	80 83       	st	Z, r24
	
	TCCR0B |= (1<<CS00) | (1<<CS02); //Set prescaler to 1024
 1e4:	85 b5       	in	r24, 0x25	; 37
 1e6:	85 60       	ori	r24, 0x05	; 5
 1e8:	85 bd       	out	0x25, r24	; 37
	TCCR0A |= (1<<WGM01);  //Set to CTC Mode
 1ea:	84 b5       	in	r24, 0x24	; 36
 1ec:	82 60       	ori	r24, 0x02	; 2
 1ee:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1<<OCIE0A); //Compare Match A interrupt enabled
 1f0:	ee e6       	ldi	r30, 0x6E	; 110
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	82 60       	ori	r24, 0x02	; 2
 1f8:	80 83       	st	Z, r24
	
	OCR0A = 8;
 1fa:	88 e0       	ldi	r24, 0x08	; 8
 1fc:	87 bd       	out	0x27, r24	; 39
 1fe:	08 95       	ret

00000200 <main>:

int main(void)
{
	int x;
	
	DDRD = 0xFF;//PORTB,C,D are set as output
 200:	8f ef       	ldi	r24, 0xFF	; 255
 202:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b01111111;
 204:	9f e7       	ldi	r25, 0x7F	; 127
 206:	94 b9       	out	0x04, r25	; 4
	DDRC = 0xFF;
 208:	87 b9       	out	0x07, r24	; 7

	PORTB |= (1 << PORTB7);  //set pull up	
 20a:	2f 9a       	sbi	0x05, 7	; 5
	
	PCICR |= (1 << PCIE0);  // enable PCMSK0 scan
 20c:	e8 e6       	ldi	r30, 0x68	; 104
 20e:	f0 e0       	ldi	r31, 0x00	; 0
 210:	80 81       	ld	r24, Z
 212:	81 60       	ori	r24, 0x01	; 1
 214:	80 83       	st	Z, r24
	PCMSK0 |= (1 << PCINT0); //PCINT0 will trigger on state change
 216:	eb e6       	ldi	r30, 0x6B	; 107
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	81 60       	ori	r24, 0x01	; 1
 21e:	80 83       	st	Z, r24
	
	sei();
 220:	78 94       	sei
	
	generateTimer();
 222:	c5 df       	rcall	.-118    	; 0x1ae <generateTimer>
	generateTimer0();
 224:	da df       	rcall	.-76     	; 0x1da <generateTimer0>
 226:	d4 e6       	ldi	r29, 0x64	; 100
 228:	c0 e0       	ldi	r28, 0x00	; 0
	
	while(1)
	{
		if(pb7Flag > 0)
 22a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <pb7Flag>
 22e:	81 11       	cpse	r24, r1
 230:	0b c0       	rjmp	.+22     	; 0x248 <main+0x48>
 232:	1d c0       	rjmp	.+58     	; 0x26e <main+0x6e>
		{
			
			//100 ms delay
			while(x < 100)
			{
				if(msDelay == 1 )
 234:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <msDelay>
 238:	81 30       	cpi	r24, 0x01	; 1
 23a:	e1 f7       	brne	.-8      	; 0x234 <main+0x34>
				{
					x++;
					msDelay = 0;
 23c:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <msDelay>
 240:	21 50       	subi	r18, 0x01	; 1
 242:	31 09       	sbc	r19, r1
	{
		if(pb7Flag > 0)
		{
			
			//100 ms delay
			while(x < 100)
 244:	19 f4       	brne	.+6      	; 0x24c <main+0x4c>
 246:	07 c0       	rjmp	.+14     	; 0x256 <main+0x56>
 248:	2d 2f       	mov	r18, r29
 24a:	3c 2f       	mov	r19, r28
			{
				if(msDelay == 1 )
 24c:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <msDelay>
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	81 f7       	brne	.-32     	; 0x234 <main+0x34>
 254:	f3 cf       	rjmp	.-26     	; 0x23c <main+0x3c>
				}
			}
			
			x = 0;	
			
			if(displayDigit == 9)
 256:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <__data_end>
 25a:	89 30       	cpi	r24, 0x09	; 9
 25c:	19 f4       	brne	.+6      	; 0x264 <main+0x64>
			{
				displayDigit = 0;		
 25e:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
 262:	03 c0       	rjmp	.+6      	; 0x26a <main+0x6a>
			}
			else
			{
				displayDigit ++;
 264:	8f 5f       	subi	r24, 0xFF	; 255
 266:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
			}
			
			pb7Flag = 0;			
 26a:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <pb7Flag>
		
		}
		//display_waiting();
		display_numerals();
 26e:	44 df       	rcall	.-376    	; 0xf8 <display_numerals>
		
	}
 270:	dc cf       	rjmp	.-72     	; 0x22a <main+0x2a>

00000272 <_exit>:
 272:	f8 94       	cli

00000274 <__stop_program>:
 274:	ff cf       	rjmp	.-2      	; 0x274 <__stop_program>
